process{


    // -----------------------------------------------------------------------
    //              ALIGNMENT 
    // -----------------------------------------------------------------------

    withName: "mTMalign_alignment"{
        publishDir = [
            path: { "${params.output}/$id/msas/" },
            mode: "copy", 
            overwrite: true, 
            pattern: "*.fa"
        ]
    }


    // -----------------------------------------------------------------------
    //              TREES 
    // -----------------------------------------------------------------------


    // ME
    withName: "computing_Seq_ME_trees"{
        publishDir = [[
            path: { "${params.output}/${id.split('_')[0]}/trees_and_replicates/ME/" },
            mode: "copy", 
            overwrite: true, 
            pattern: "*.nwk", 
            saveAs:  { fn -> "${fn.split('_')[0]}_ME.nwk"}
        ],
        [
            path: { "${params.output}/${id.split('_')[0]}/trees_and_replicates/ME/replicates" },
            mode: "copy", 
            overwrite: true, 
            pattern: "*.replicates",
            saveAs:  { fn -> "${fn.split('_')[0]}_ME.replicates"}
        ] 
        ]
    }


    // ML 
    withName: "computing_Seq_ML_trees"{
        publishDir = [[
            path: { "${params.output}/${id.split('_')[0]}/trees_and_replicates/ML/" },
            mode: "copy", 
            overwrite: true, 
            pattern: "*.nwk",
            saveAs:  { fn -> "${fn.split('_')[0]}_ML.nwk"}
        ],[
            path: { "${params.output}/${id.split('_')[0]}/trees_and_replicates/ML/replicates" },
            mode: "copy", 
            overwrite: true, 
            pattern: "*.replicates",
            saveAs:  { fn -> "${fn.split('_')[0]}_ML.replicates"}
            ] 
        ]
    }
    

    // IMD
    withName: "computing_IMD_ME_trees"{
        publishDir = [
            path: { "${params.output}/${id.split('_')[0]}/trees_and_replicates/IMD/" },
            mode: "copy",
            overwrite: true,
            pattern: "*matrices.1.matrix*.nwk",
            saveAs:  { fn -> 
                    "${fn.split('_')[0]}_IMD.nwk"
            }        
        ]
    }
    withName: "MERGE_REPLICATES"{
        publishDir = [
            path: { "${params.output}/${id.split('_')[0]}/trees_and_replicates/IMD/replicates" },
            mode: "copy",
            overwrite: true,
            saveAs:  { fn -> "${fn.split('_')[0]}_IMD.replicates"}
        ]
    }


    // Multistrap support values 
    withName: "COMBINE_BOOTSTRAP_SUPPORTS"{
        publishDir = [[
            path: { "${params.output}/$id/tree_supports/${params.seq_tree}" },
            mode: "copy",
            pattern: "*ME_tree*"
            ],
            [
            path: { "${params.output}/$id/tree_supports/IMD" },
            mode: "copy",
            pattern: "*IMD_tree*"
            ],
            [
            path: { "${params.output}/$id/tree_supports/${params.seq_tree}" },
            mode: "copy",
            pattern: "*ML_tree*"
            ],
        ]
    }   
}